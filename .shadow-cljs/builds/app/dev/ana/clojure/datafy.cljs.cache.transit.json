["^ ","~:output",["^ ","~:js","goog.provide('clojure.datafy');\n/**\n * Attempts to return x as data.\n *   datafy will return the value of clojure.protocols/datafy. If\n *   the value has been transformed and the result supports\n *   metadata, :clojure.datafy/obj will be set on the metadata to the\n *   original value of x.\n */\nclojure.datafy.datafy = (function clojure$datafy$datafy(x){\nvar v = clojure.core.protocols.datafy(x);\nif((v === x)){\nreturn v;\n} else {\nif((((!((v == null))))?(((((v.cljs$lang$protocol_mask$partition0$ & (262144))) || ((cljs.core.PROTOCOL_SENTINEL === v.cljs$core$IWithMeta$))))?true:false):false)){\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(v,cljs.core.assoc,new cljs.core.Keyword(\"clojure.datafy\",\"obj\",\"clojure.datafy/obj\",-330079421),x);\n} else {\nreturn v;\n}\n}\n});\n/**\n * Returns (possibly transformed) v in the context of coll and k (a\n *   key/index or nil). Callers should attempt to provide the key/index\n *   context k for Indexed/Associative/ILookup colls if possible, but not\n *   to fabricate one e.g. for sequences (pass nil). nav will return the\n *   value of clojure.core.protocols/nav.\n */\nclojure.datafy.nav = (function clojure$datafy$nav(coll,k,v){\nreturn clojure.core.protocols.nav(coll,k,v);\n});\nclojure.datafy.datify_ref = (function clojure$datafy$datify_ref(r){\nreturn cljs.core.with_meta(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref(r)], null),cljs.core.meta(r));\n});\n(cljs.core.Var.prototype.clojure$core$protocols$Datafiable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Var.prototype.clojure$core$protocols$Datafiable$datafy$arity$1 = (function (r){\nvar r__$1 = this;\nreturn clojure.datafy.datify_ref(r__$1);\n}));\n\n(cljs.core.Reduced.prototype.clojure$core$protocols$Datafiable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Reduced.prototype.clojure$core$protocols$Datafiable$datafy$arity$1 = (function (r){\nvar r__$1 = this;\nreturn clojure.datafy.datify_ref(r__$1);\n}));\n\n(cljs.core.Atom.prototype.clojure$core$protocols$Datafiable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Atom.prototype.clojure$core$protocols$Datafiable$datafy$arity$1 = (function (r){\nvar r__$1 = this;\nreturn clojure.datafy.datify_ref(r__$1);\n}));\n\n(cljs.core.Volatile.prototype.clojure$core$protocols$Datafiable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Volatile.prototype.clojure$core$protocols$Datafiable$datafy$arity$1 = (function (r){\nvar r__$1 = this;\nreturn clojure.datafy.datify_ref(r__$1);\n}));\n\n(cljs.core.Delay.prototype.clojure$core$protocols$Datafiable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Delay.prototype.clojure$core$protocols$Datafiable$datafy$arity$1 = (function (r){\nvar r__$1 = this;\nreturn clojure.datafy.datify_ref(r__$1);\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","clojure/datafy.cljs","~:line",11,"~:column",5,"~:end-line",11,"~:end-column",19,"~:doc","Functions to turn objects into data. Alpha, subject to change"],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$clojure.datafy","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.core.protocols","^Q","~$p","^Q","~$cljs.core","^R","~$goog","^S"],"~:seen",["^I",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^R","^R"],"~:form",["~#list",["~$ns","^K",["^Y",["^U",["^Q","~:as","~$p"]]]]],"~:flags",["^ ","^U",["^I",[]]],"~:js-deps",["^ "],"~:deps",["^S","^R","^Q"]],"^N","^K","~:resource-id",["~:shadow.build.classpath/resource","clojure/datafy.cljs"],"~:compiled-at",1655135380875,"^L",["^ ","^Q","^Q","~$p","^Q","^R","^R","^S","^S"],"~:resource-name","clojure/datafy.cljs","~:warnings",[],"~:source",";   Copyright (c) Rich Hickey. All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns\n  ^{:doc \"Functions to turn objects into data. Alpha, subject to change\"}\n    clojure.datafy\n  (:require [clojure.core.protocols :as p]))\n\n(defn datafy\n  \"Attempts to return x as data.\n  datafy will return the value of clojure.protocols/datafy. If\n  the value has been transformed and the result supports\n  metadata, :clojure.datafy/obj will be set on the metadata to the\n  original value of x.\"\n  [x]\n  (let [v (p/datafy x)]\n    (if (identical? v x)\n      v\n      (if (implements? IWithMeta v)\n        (vary-meta v assoc ::obj x\n                   ;; Circling back to this at a later date per @dnolen\n                   ;; ::class (-> x .-constructor .-name symbol)\n                   )\n        v))))\n\n(defn nav\n  \"Returns (possibly transformed) v in the context of coll and k (a\n  key/index or nil). Callers should attempt to provide the key/index\n  context k for Indexed/Associative/ILookup colls if possible, but not\n  to fabricate one e.g. for sequences (pass nil). nav will return the\n  value of clojure.core.protocols/nav.\"\n  [coll k v]\n  (p/nav coll k v))\n\n(defn- datify-ref [r]\n  (with-meta [(deref r)] (meta r)))\n\n(extend-protocol p/Datafiable\n  Var\n  (datafy [r] (datify-ref r))\n\n  Reduced\n  (datafy [r] (datify-ref r))\n\n  Atom\n  (datafy [r] (datify-ref r))\n\n  Volatile\n  (datafy [r] (datify-ref r))\n\n  Delay\n  (datafy [r] (datify-ref r)))\n","~:reader-features",["^I",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";AAaA;;;;;;;wBAAA,xBAAMA,wDAMHC;AANH,AAOE,IAAMC,IAAE,AAACC,8BAASF;AAAlB,AACE,GAAI,CAAYC,MAAED;AAChBC;;AACA,GAAI,EAAA,GAAA,MAAA,SAAA,EAAA,EAAA,CAAA,wCAAA,eAAA,CAAAE,gCAAA,2BAAA,KAAA,OAAA,lJAAuBF,mBAAAA,wFAAAA;AACzB,2EAAA,pEAACG,kDAAUH,EAAEI,8FAAYL;;AAIzBC;;;;AAER;;;;;;;qBAAA,rBAAMK,kDAMHC,KAAKC,EAAEP;AANV,AAOE,OAACQ,2BAAMF,KAAKC,EAAEP;;AAEhB,4BAAA,5BAAOS,gEAAYC;AAAnB,AACE,2BAAA,pBAACC,uGAAW,AAACC,gBAAMF,WAAI,AAACG,eAAKH;;AAE/B,AAAA,AAAA,CAAA,AAAA,6DAAAR,7DACEY;;AADF,CAAA,AAAA,AACEA,2EACA,WAASJ;AAAT,AAAA,YAAA,RAASA;AAAT,AAAY,OAACD,0BAAWC;;;AAF1B,AAAA,CAAA,AAAA,iEAAAR,jEAIEa;;AAJF,CAAA,AAAA,AAIEA,+EACA,WAASL;AAAT,AAAA,YAAA,RAASA;AAAT,AAAY,OAACD,0BAAWC;;;AAL1B,AAAA,CAAA,AAAA,8DAAAR,9DAOEc;;AAPF,CAAA,AAAA,AAOEA,4EACA,WAASN;AAAT,AAAA,YAAA,RAASA;AAAT,AAAY,OAACD,0BAAWC;;;AAR1B,AAAA,CAAA,AAAA,kEAAAR,lEAUEe;;AAVF,CAAA,AAAA,AAUEA,gFACA,WAASP;AAAT,AAAA,YAAA,RAASA;AAAT,AAAY,OAACD,0BAAWC;;;AAX1B,AAAA,CAAA,AAAA,+DAAAR,/DAaEgB;;AAbF,CAAA,AAAA,AAaEA,6EACA,WAASR;AAAT,AAAA,YAAA,RAASA;AAAT,AAAY,OAACD,0BAAWC","names",["clojure.datafy/datafy","x","v","clojure.core.protocols/datafy","cljs.core/PROTOCOL_SENTINEL","cljs.core.vary_meta","cljs.core/assoc","clojure.datafy/nav","coll","k","clojure.core.protocols/nav","clojure.datafy/datify-ref","r","cljs.core/with-meta","cljs.core/deref","cljs.core/meta","cljs.core/Var","cljs.core/Reduced","cljs.core/Atom","cljs.core/Volatile","cljs.core/Delay"]],"~:used-vars",["^I",["~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/Reduced","~$cljs.core/deref","~$cljs.core/Volatile","~$cljs.core/Delay","~$cljs.core/Var","~$clojure.datafy/nav","~$cljs.core/vary-meta","~$cljs.core/with-meta","~$clojure.datafy/datafy","~$cljs.core/meta","~$clojure.datafy/datify-ref","~$cljs.core/not","~$cljs.core/Atom","~$cljs.core/assoc","~$clojure.core.protocols/nav","~$clojure.core.protocols/datafy"]]],"~:cache-keys",["~#cmap",[["^14","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^I",[]],"~:deps-syms",["^S","~$goog.dom.HtmlElement"]]],["^14","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S"]]],["^14","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","~$goog.array","~$goog.object","~$goog.labs.userAgent.util","~$goog.string.internal"]]],["^14","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","~$goog.asserts","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^1["]]],["^14","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","^20"]]],["^14","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S"]]],["^14","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S"]]],["^14","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S"]]],["^14","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S"]]],["^14","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","^20"]]],"~:SHADOW-TIMESTAMP",[1655135362000,1655135362000,1655135352000],["^14","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","^20","~$goog.reflect"]]],["^14","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","^20","~$goog.fs.blob","^21","~$goog.html.SafeScript","~$goog.html.trustedtypes","^23","^24","^25","^26"]]],["^14","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S"]]],["^14","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S"]]],["^14","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","^25","~$goog.html.SafeUrl","^26","^20","^1["]]],["^14","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","^20","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^2:","~$goog.html.SafeStyle","^2<","^22","~$goog.html.uncheckedconversions","^25","^1["]]],["^14","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","^25","^23","^24","^2:","^2@","~$goog.html.SafeStyleSheet","^2<","~$goog.dom.TagName","^22","^26","^20","~$goog.labs.userAgent.browser","^1X","^1Y","^1[","~$goog.dom.tags","^2;"]]],["^14","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","^1Y"]]],["^14","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S"]]],["^14","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^14","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","^1X","^20","~$goog.collections.maps","~$goog.string","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^14","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S"]]],["^14","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S"]]],["^14","clojure/core/protocols.cljs"],["03d6165b4abcd03fb94e7f8e65eb1683c14857a1","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","^R"]]],["^14","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S"]]],["^14","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",[]]],["^14","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","^1X","^1Y"]]],["^14","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","~$goog.dom.safe","^2A","^25","^1["]]],["^14","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S"]]],["^14","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","~$goog.labs.userAgent","^1["]]],["^14","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S"]]],["^14","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S"]]],["^14","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","^20","^2?","^2:","^2@","^2B","^2<","^22","^25","^1[","^23"]]],["^14","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S"]]],["^14","cljs/core.cljs"],["03d6165b4abcd03fb94e7f8e65eb1683c14857a1","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","~$goog.math.Long","~$goog.math.Integer","^2I","^1Y","^1X","~$goog.Uri","~$goog.string.StringBuffer"]]],["^14","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","^25","^26","^2;","^20"]]],["^14","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","^25","^2@","^26","^1Y","^20","^1["]]],["^14","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","^28"]]],["^14","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","^20","^2I"]]],["^14","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","^20","^26"]]],["^14","clojure/datafy.cljs"],["03d6165b4abcd03fb94e7f8e65eb1683c14857a1","^1S",["^ ","^1T",null,"^1U",["^I",[]],"^1V",["^S","^R","^Q"]]]]],"~:clj-info",["^ ","jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/tagged_literals.cljc",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/source_map/base64.clj",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1650457393000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/analyzer/impl.cljc",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1650457393000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1650457393000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/binaryage/devtools/1.0.3/devtools-1.0.3.jar!/devtools/defaults.clj",1655135361000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/analyzer/passes/and_or.cljc",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/source_map/base64_vlq.clj",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/externs.clj",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/instant.clj",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/vendor/clojure/data/json.clj",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/env.cljc",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1650457393000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/analyzer.cljc",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1650457393000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/core.cljc",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1650457393000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/compiler.cljc",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/analyzer/impl/namespaces.cljc",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1650457393000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/analyzer/passes.cljc",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/source_map.clj",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/js_deps.cljc",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/util.cljc",1655135352000,"jar:file:/Users/japiirainen/.m2/repository/org/clojure/clojurescript/1.11.57/clojurescript-1.11.57.jar!/cljs/vendor/clojure/tools/reader.clj",1655135352000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","clojure/datafy.cljs","^7",11,"^8",5,"^9",11,"^:",19,"^;","Functions to turn objects into data. Alpha, subject to change"],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F"],"^G",null,"^H",["^I",[]],"^J","^K","^L",["^ "],"^O",null,"^P",["^ ","^Q","^Q","~$p","^Q","^R","^R","^S","^S"],"^T",["^I",["^U"]],"^V",null,"~:defs",["^ ","~$datafy",["^ ","~:protocol-inline",null,"^5",["^ ","^6","clojure/datafy.cljs","^7",14,"^8",7,"^9",14,"^:",13,"~:arglists",["^Y",["~$quote",["^Y",[["~$x"]]]]],"^;","Attempts to return x as data.\n  datafy will return the value of clojure.protocols/datafy. If\n  the value has been transformed and the result supports\n  metadata, :clojure.datafy/obj will be set on the metadata to the\n  original value of x."],"^J","^1I","^6","clojure/datafy.cljs","^:",13,"~:method-params",["^Y",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^Y",[null,null]],"^8",1,"~:variadic?",false,"^7",14,"~:ret-tag",["^I",["~$clj","~$any","~$cljs.core/MetaFn","~$clj-nil"]],"^9",14,"~:max-fixed-arity",1,"~:fn-var",true,"^3K",["^Y",["^3L",["^Y",[["~$x"]]]]],"^;","Attempts to return x as data.\n  datafy will return the value of clojure.protocols/datafy. If\n  the value has been transformed and the result supports\n  metadata, :clojure.datafy/obj will be set on the metadata to the\n  original value of x."],"~$nav",["^ ","^3J",null,"^5",["^ ","^6","clojure/datafy.cljs","^7",31,"^8",7,"^9",31,"^:",10,"^3K",["^Y",["^3L",["^Y",[["~$coll","~$k","~$v"]]]]],"^;","Returns (possibly transformed) v in the context of coll and k (a\n  key/index or nil). Callers should attempt to provide the key/index\n  context k for Indexed/Associative/ILookup colls if possible, but not\n  to fabricate one e.g. for sequences (pass nil). nav will return the\n  value of clojure.core.protocols/nav."],"^J","^1F","^6","clojure/datafy.cljs","^:",10,"^3M",["^Y",[["^3Y","~$k","~$v"]]],"^3N",null,"^3O",["^Y",[null,null]],"^8",1,"^3P",false,"^7",31,"^3Q","^3S","^9",31,"^3V",3,"^3W",true,"^3K",["^Y",["^3L",["^Y",[["^3Y","~$k","~$v"]]]]],"^;","Returns (possibly transformed) v in the context of coll and k (a\n  key/index or nil). Callers should attempt to provide the key/index\n  context k for Indexed/Associative/ILookup colls if possible, but not\n  to fabricate one e.g. for sequences (pass nil). nav will return the\n  value of clojure.core.protocols/nav."],"~$datify-ref",["^ ","^3J",null,"^5",["^ ","^6","clojure/datafy.cljs","^7",40,"^8",8,"^9",40,"^:",18,"~:private",true,"^3K",["^Y",["^3L",["^Y",[["~$r"]]]]]],"^3[",true,"^J","^1K","^6","clojure/datafy.cljs","^:",18,"^3M",["^Y",[["~$r"]]],"^3N",null,"^3O",["^Y",[null,null]],"^8",1,"^3P",false,"^7",40,"^3Q",["^I",["^3R","^3T","^3U"]],"^9",40,"^3V",1,"^3W",true,"^3K",["^Y",["^3L",["^Y",[["~$r"]]]]]]],"^W",["^ ","^R","^R"],"~:cljs.analyzer/constants",["^ ","^T",["^I",["~:clojure.datafy/obj"]],"~:order",["^41"]],"^10",["^ ","^U",["^I",[]]],"^11",["^ "],"^12",["^S","^R","^Q"]],"^N","^K","~:ns-specs",["^ "],"~:ns-spec-vars",["^I",[]],"~:compiler-options",["^1R",[["^45","~:static-fns"],true,["^45","~:shadow-tweaks"],null,["^45","~:source-map-inline"],null,["^45","~:elide-asserts"],false,["^45","~:optimize-constants"],null,["^45","^17"],null,["^45","~:external-config"],null,["^45","~:tooling-config"],null,["^45","~:emit-constants"],null,["^45","~:load-tests"],null,["^45","~:form-size-threshold"],null,["^45","~:global-goog-object&array"],null,["^45","~:data-readers"],null,["^45","~:infer-externs"],"~:auto",["^45","^19"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^45","~:fn-invoke-direct"],null,["^45","~:source-map"],"/dev/null"]]]